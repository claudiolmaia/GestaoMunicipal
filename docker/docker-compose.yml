version: "3"

services:

    rabbitmq:
        image: rabbitmq:3-management
        container_name: ppgm-rabbitmq
        environment:
            RABBITMQ_DEFAULT_USER: "ppgm"
            RABBITMQ_DEFAULT_PASS: "ppgm"
        # ports:
        #     - "8081:15672"

    sql-server:
        image: ppgm/sql-server:latest
        container_name: ppgm-sql-server
        build: 
            context: ../sql
            dockerfile: ./Dockerfile
        environment:
            SA_PASSWORD: "@ppgm2021"
            ACCEPT_EULA: "Y"     

    api-auth:
        image: ppgm/auth:latest
        container_name: ppgm-api-autenticacao
        build: 
            context: ../backend/src
            dockerfile: ./services/PPGM.Autenticacao.API/Dockerfile  
        restart: always    
        environment: 
            - ASPNETCORE_ENVIRONMENT=Production
            - ASPNETCORE_URLS=https://+:5101;http://+5102
            - ASPNETCORE_Kestrel__Certificates__Default__Password=ppgm
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/ppgm-cert.pfx
        volumes:
            - ./certs:/https:ro   
        ports: 
            - "5101:5101"
            - "5102:5102"
        depends_on:
            - rabbitmq
            - sql-server

    api-usuario:
        image: ppgm/api-usuario:latest
        container_name: ppgm-api-usuario
        build: 
            context: ../backend/src
            dockerfile: ./services/PPGM.Usuarios.API/Dockerfile
        restart: always 
        environment: 
            - ASPNETCORE_ENVIRONMENT=Production
            - ASPNETCORE_URLS=https://+:5201;http://+5202
            - ASPNETCORE_Kestrel__Certificates__Default__Password=ppgm
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/ppgm-cert.pfx
        volumes:
            - ./certs:/https:ro
        ports: 
            - "5201:5201"
            - "5202:5202"
        depends_on:
            - rabbitmq
            - sql-server
            - api-auth

    ppgm-web:
        image: ppgm/web:latest
        container_name: ppgm-web
        build:
            context: ../frontend
            dockerfile: ./Dockerfile
        restart: always
        volumes: 
            - dpkeys:/var/data_protection_keys/         
        ports:
            - "8080:8080"
            - "4443:443"
        depends_on:
            - api-auth
            - api-usuario            

    ppgm-server:
        image: ppgm/server:latest
        container_name: ppgm-server    
        build: 
            context: ./
            dockerfile: ./nginx/Dockerfile 
        restart: always 
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - ppgm-web
volumes:
    dpkeys:   